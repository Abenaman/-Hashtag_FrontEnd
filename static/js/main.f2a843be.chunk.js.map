{"version":3,"sources":["App.js","serviceWorker.js","components/Show.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","tweets","_this2","axios","then","res","setState","data","console","log","react_default","a","createElement","className","map","tweet","date","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","Show","book","get","params","id","_this3","delete","result","history","push","class","title","Link","to","aria-hidden","isbn","author","description","published_year","publisher","concat","_id","onClick","bind","ReactDOM","render","BrowserRouter","Route","exact","path","component","document","getElementById","URL","process","origin","addEventListener","event","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker","request","url","registerServiceWorker"],"mappings":"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","file":"static/js/main.f2a843be.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor (props) {\n    super (props);\n    this.state = {\n      tweets: [],\n    };\n  }\n  componentDidMount () {\n    axios ('http://localhost:3000/api/hashtags').then (res => {\n      this.setState ({tweets: res.data});\n      console.log (this.state.tweets);\n    });\n  }\n  render () {\n    return (\n      <div className=\"container\">\n        <div className=\"panel panel-default\">\n          <div className=\"panel-heading\">\n            <h3 className=\"panel-title \">\n              Treading Hashtags#\n            </h3>\n          </div>\n          <div className=\"panel-body\">\n            <table className=\"table table-stripe\">\n              <thead>\n                <tr>\n                  <th>Hashtag#Time</th>\n                  <th>US</th>\n                  <th>Germany</th>\n                  <th>Uk</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.tweets.map (tweet => (\n                  <tr>\n                    <td>{tweet.date}</td>\n                    <td>{tweet.tweets}</td>\n                    <td>{tweet.tweets}</td>\n                    <td>{tweet.tweets}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean (\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match (\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register () {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL (process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener ('load', event => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW (swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker (swUrl);\n      }\n    });\n\n    window.addEventListener ('fetch', event => {\n      if (event.request.url.match ('^.*(\\/api\\/).*$')) {\n        return false;\n      }\n    });\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register (swUrl)\n    .then (registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log (\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate (registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log ('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess (registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch (error => {\n      console.error ('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch (swUrl)\n    .then (response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get ('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf ('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then (registration => {\n          registration.unregister ().then (() => {\n            window.location.reload ();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW (swUrl, config);\n      }\n    })\n    .catch (() => {\n      console.log (\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then (registration => {\n      registration.unregister ();\n    });\n  }\n}\n","import React, {Component} from 'react';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\n\nclass Show extends Component {\n  constructor (props) {\n    super (props);\n    this.state = {\n      book: {},\n    };\n  }\n\n  componentDidMount () {\n    axios.get ('/api/book/' + this.props.match.params.id).then (res => {\n      this.setState ({book: res.data});\n      console.log (this.state.book);\n    });\n  }\n\n  delete (id) {\n    console.log (id);\n    axios.delete ('/api/book/' + id).then (result => {\n      this.props.history.push ('/');\n    });\n  }\n\n  render () {\n    return (\n      <div class=\"container\">\n        <div class=\"panel panel-default\">\n          <div class=\"panel-heading\">\n            <h3 class=\"panel-title\">\n              {this.state.book.title}\n            </h3>\n          </div>\n          <div class=\"panel-body\">\n            <h4>\n              <Link to=\"/\">\n                <span class=\"glyphicon glyphicon-th-list\" aria-hidden=\"true\" />\n                {' '}\n                Book List\n              </Link>\n            </h4>\n            <dl>\n              <dt>ISBN:</dt>\n              <dd>{this.state.book.isbn}</dd>\n              <dt>Author:</dt>\n              <dd>{this.state.book.author}</dd>\n              <dt>Description:</dt>\n              <dd>{this.state.book.description}</dd>\n              <dt>Publish Date:</dt>\n              <dd>{this.state.book.published_year}</dd>\n              <dt>Publisher:</dt>\n              <dd>{this.state.book.publisher}</dd>\n            </dl>\n            <Link to={`/edit/${this.state.book._id}`} class=\"btn btn-success\">\n              Edit\n            </Link>&nbsp;\n            <button\n              onClick={this.delete.bind (this, this.state.book._id)}\n              class=\"btn btn-danger\"\n            >\n              Delete\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Show;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './serviceWorker';\nimport Show from './components/Show';\n\nReactDOM.render (\n  <Router>\n    <div>\n      <Route exact path=\"/\" component={App} />\n      <Route path=\"/show/:id\" component={Show} />\n    </div>\n  </Router>,\n  document.getElementById ('root')\n);\nregisterServiceWorker ();\n"],"sourceRoot":""}